{"version":3,"sources":["logo2.png","App2.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App2","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mainTitle","clock","win1Dt","win2Dt","win1visible","win2visible","chgWinTimerCount","test","win1LineIndex","win1LineCount","win2LineIndex","win2LineCount","maxcount","chgWinFlag","window","javaCallJS","str","indexOf","dt","split","setState","clearAll","i","length","sdt","win","crtBodyItem","frequency","parseInt","_this2","setInterval","getNowDate","react_default","a","createElement","id","className","src","require","style","display","document","getElementById","innerHTML","clearInterval","chgWinTimer","data","_this3","parentNode","setAttribute","itemNode1","txt1","createTextNode","appendChild","itemNode2","txt2","nodes","children","console","log","remNode","data2","removeChild","crtBodyItem2","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","currentdate","getDay","Component","Boolean","location","hostname","match","ReactDOM","render","src_App2_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5322b632.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.97198ce1.png\";","import React, { Component } from 'react';\nimport './App2.css';\n\nclass App2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainTitle: \"旺苍县妇幼保健院就诊队列\",\n      clock: \"Loading...\",\n      win1Dt: [],\n      win2Dt: [],\n      win1visible: \"\",\n      win2visible: \"none\",\n      chgWinTimerCount: 5000,\n    }\n\n    this.test = 0;\n    this.win1LineIndex = 0;\n    this.win1LineCount = 0;\n\n    this.win2LineIndex = 0;\n    this.win2LineCount = 0;\n\n    this.maxcount = 10;\n\n    this.chgWinFlag = false;\n\n    //竖屏：\n    //（1）窗口配置：Trade1|窗口号|标题名称\n    //（2）叫号：Trade2|窗口号|排队号       ###\n    //（3）叫号：Trade3|5（秒）\n    window.javaCallJS = (str) => {\n      // alert(str);\n      if (str.indexOf(\"Trade1\") > -1) {\n        let dt = str.split(\"|\");\n        this.setState({ mainTitle: dt[2] });\n      }\n\n      if (str.indexOf(\"Trade2\") > -1) {\n        this.clearAll();\n        let dt = str.split(\"###\");\n        for (let i = 0; i < dt.length; i++) {\n          let sdt=dt[i].split(\"|\");\n          let win = sdt[1].length < 2 ? \"0\" + sdt[1] : sdt[1];\n          this.crtBodyItem([win, sdt[2]]);\n        }\n        \n      }\n      if (str.indexOf(\"Trade3\") > -1) {\n        let dt = str.split(\"|\");\n        let frequency = parseInt(dt[1]) * 1000\n        this.setState({ chgWinTimerCount: frequency });\n      }\n\n      if (str.indexOf(\"Trade9\") > -1) {\n        // this.clearAll();\n        let dt = str.split('|');\n        this.crtBodyItem([dt[1], dt[2]]);\n      }\n    }\n  }\n\n  componentWillMount() {\n    setInterval(() => {\n      this.getNowDate();\n    }, 1000);\n  }\n\n  componentDidMount() {\n    // setInterval(() => {\n    //   this.test += 1;\n    //   if (this.test > 30) return;\n    //   this.crtBodyItem([\"0000\" + this.test, \"090001\" + this.test]);\n    // }, 1000);\n\n    // setInterval(()=>{\n    //   document.getElementById(\"main\").click();\n    //   document.getElementById(\"main\").onclick = function(){\n    //     console.log(\"被点击\");\n    // }\n    //   console.log(\"auto click\");\n    // },1000);\n\n    // setInterval(() => {\n    //   window.javaCallJS(\"Trade9|001|\" + (this.test += 1));\n    //   // window.javaCallJS(\"Trade9|001|\" + (this.test += 1));\n    //   // window.javaCallJS(\"Trade9|001|\" + (this.test += 1));\n    //   // window.javaCallJS(\"Trade9|001|\" + (this.test += 1));\n    //   // window.javaCallJS(\"Trade9|001|\" + (this.test += 1));\n    // }, 2000);\n  }\n\n  render() {\n    return (\n      <div id=\"main\" className=\"main\">\n        <div className='topbar'>\n          <img src={require(\"./logo2.png\")}/>\n          {/* <div className=\"mainTitle\">{this.state.mainTitle}</div> */}\n          <div className=\"clock\">{this.state.clock}</div>\n        </div>\n       \n        <div className=\"tbTitle\">\n          <div className=\"tbTitle-item1\">诊室名称</div>\n          <div className=\"tbTitle-item2\">就诊人</div>\n        </div>\n        <div id=\"tbBody\" className=\"tbBody\" style={{ display: this.state.win1visible }}></div>\n        <div id=\"tbBody2\" className=\"tbBody2\" style={{ display: this.state.win2visible }}></div>\n\n        {/* <button style={{zIndex:999}} onClick={()=>{\n           \n        }}>123</button> */}\n      </div>\n    );\n  }\n\n  clearAll() {\n    this.win1LineIndex = 0;\n    this.win1LineCount = 0;\n    this.win2LineIndex = 0;\n    this.win2LineCount = 0;\n    this.chgWinFlag = false;\n\n    document.getElementById(\"tbBody\").innerHTML = \"\";\n    document.getElementById(\"tbBody2\").innerHTML = \"\";\n\n    clearInterval(this.chgWinTimer);\n    this.setState({ win1visible: \"\", win2visible: \"none\" });\n  }\n\n  crtBodyItem(data) {\n    this.win1LineIndex += 1;\n    let parentNode = document.createElement(\"div\");\n    // parentNode.setAttribute(\"class\",\"tbBody-item animation flip\");\n    parentNode.setAttribute(\"class\", \"tbBody-item\");\n    parentNode.setAttribute(\"id\", \"win1Line\" + this.win1LineIndex);\n\n    let itemNode1 = document.createElement(\"div\");\n    itemNode1.setAttribute(\"class\", \"tbBody-item1\");\n    let txt1 = document.createTextNode(data[0]);\n    itemNode1.appendChild(txt1);\n\n    let itemNode2 = document.createElement(\"div\");\n    itemNode2.setAttribute(\"class\", \"tbBody-item2\");\n    let txt2 = document.createTextNode(data[1]);\n    itemNode2.appendChild(txt2);\n\n    parentNode.appendChild(itemNode1);\n    parentNode.appendChild(itemNode2);\n\n    document.getElementById(\"tbBody\").appendChild(parentNode);\n    this.win1LineCount += 1;\n\n    if (this.win1LineCount > this.maxcount) {\n      if (!this.chgWinFlag) {\n        // clearInterval(this.chgWinTimer);\n        this.chgWinFlag = true;\n        this.chgWinTimer = setInterval(() => {\n          this.setState({ win1visible: this.state.win1visible == \"\" ? \"none\" : \"\", win2visible: !this.state.win2visible == \"\" ? \"\" : \"none\" });\n        }, this.state.chgWinTimerCount);\n      }\n\n\n      if (this.win1LineCount == 11) {\n        // console.error(\"!@#\");\n        for (let i = 0; i < 10; i++) {\n          let nodes = document.getElementById(\"tbBody\").children;\n          console.log(nodes[0].id);\n          console.log(nodes[0]);\n          let remNode = document.getElementById(nodes[0].id);\n          let data2 = [remNode.children[0].innerHTML, remNode.children[1].innerHTML];\n          document.getElementById(\"tbBody\").removeChild(remNode);\n\n          this.crtBodyItem2(data2);\n        }\n      }\n\n      if (this.win1LineCount > 20) {\n        let nodes = document.getElementById(\"tbBody\").children;\n        console.log(nodes[0].id);\n        console.log(nodes[0]);\n        let remNode = document.getElementById(nodes[0].id);\n        let data2 = [remNode.children[0].innerHTML, remNode.children[1].innerHTML];\n        document.getElementById(\"tbBody\").removeChild(remNode);\n\n        this.crtBodyItem2(data2);\n      }\n\n\n\n    }\n    // document.getElementById(\"tbBody\").scrollTop = document.getElementById(\"tbBody\").scrollHeight;\n  }\n\n  crtBodyItem2(data) {\n    this.win2LineIndex += 1;\n    let parentNode = document.createElement(\"div\");\n    // parentNode.setAttribute(\"class\",\"tbBody-item animation flip\");\n    parentNode.setAttribute(\"class\", \"tbBody-item\");\n    parentNode.setAttribute(\"id\", \"win2Line\" + this.win2LineIndex);\n\n    let itemNode1 = document.createElement(\"div\");\n    itemNode1.setAttribute(\"class\", \"tbBody-item1\");\n    let txt1 = document.createTextNode(data[0]);\n    itemNode1.appendChild(txt1);\n\n    let itemNode2 = document.createElement(\"div\");\n    itemNode2.setAttribute(\"class\", \"tbBody-item2\");\n    let txt2 = document.createTextNode(data[1]);\n    itemNode2.appendChild(txt2);\n\n    parentNode.appendChild(itemNode1);\n    parentNode.appendChild(itemNode2);\n\n    document.getElementById(\"tbBody2\").appendChild(parentNode);\n    this.win2LineCount += 1;\n\n    if (this.win2LineCount > this.maxcount) {\n      let nodes = document.getElementById(\"tbBody2\").children;\n      console.log(nodes[0].id);\n      console.log(nodes[0]);\n      let remNode = document.getElementById(nodes[0].id);\n\n      document.getElementById(\"tbBody2\").removeChild(remNode);\n    }\n  }\n\n  getNowDate() {\n    let date = new Date();\n    let sign1 = \"-\";\n    let sign2 = \":\";\n    let year = date.getFullYear() // 年\n    let month = date.getMonth() + 1; // 月\n    let day = date.getDate(); // 日\n    let hour = date.getHours(); // 时\n    let minutes = date.getMinutes(); // 分\n    let seconds = date.getSeconds() //秒\n    let weekArr = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'];\n    let week = weekArr[date.getDay() - 1];\n    // 给一位数数据前面加 “0”\n    if (month >= 1 && month <= 9) {\n      month = \"0\" + month;\n    }\n    if (day >= 0 && day <= 9) {\n      day = \"0\" + day;\n    }\n    if (hour >= 0 && hour <= 9) {\n      hour = \"0\" + hour;\n    }\n    if (minutes >= 0 && minutes <= 9) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds >= 0 && seconds <= 9) {\n      seconds = \"0\" + seconds;\n    }\n    let currentdate = year + \"年\" + month + \"月\" + day + \"日 \" + week + \" \" + hour + sign2 + minutes + sign2 + seconds;\n    // let currentdate = year + \"年\" + month + \"月\" + day + \"日 \" + week + \" \" + hour + sign2 + minutes;\n    this.setState({ clock: currentdate });\n  }\n}\n\nexport default App2;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"babel-polyfill\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//横屏\nimport App2 from './App2';     //输出：shu\n\n//竖屏\n// import App from './App';//19-30    输出：heng4\n// import App3 from './App3';//2-17   输出：heng3\n// import App1 from './App1';//1      输出：heng1\n// import App18 from './App18';//18   输出：heng18\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App2 />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}