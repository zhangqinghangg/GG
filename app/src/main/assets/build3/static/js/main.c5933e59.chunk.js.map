{"version":3,"sources":["utils/log.ts","components/Horizontal/index.tsx","components/marquee.jsx","components/Name.tsx","components/Vertical/index.tsx","pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["log","params","window","ggie","webLog","Horizontal","props","timer","data","trick","setState","date","moment","format","toggle","flag","_","eq","visiable","onChange","queue","state","i","Math","round","random","length","key","toString","Date","now","substring","shift","push","first","second","third","fourth","fifth","tip","value","this","setInterval","clearInterval","prefix","sysName","title","className","id","alt","src","process","onClick","isEmpty","map","item","index","row","keys","cindex","visible","wrapClassName","animation","maskAnimation","closable","closeIcon","onClose","e","React","GMarquee","direction","children","Name","classString","classNames","rxTwoCNChar","isTwoCNChar","test","bind","len","split","join","handleName","Vertical","counter","docInfo","department","officeId","console","result","prev","slice","avatar","name","duty","waitingQueue","currentUser","Component","App","config","components","useEffect","type","Boolean","location","hostname","match","TS","init","rootNode","document","getElementById","style","width","height","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5933e59.chunk.js","sourcesContent":["export function log(params) {\r\n  // console.log(params)\r\n  // window.ggie.test(params)\r\n  window.ggie.webLog(params)\r\n}","import * as React from 'react';\r\nimport QueueAnim from 'rc-queue-anim';\r\n// import Name from '../Name';\r\nimport _ from 'lodash'\r\nimport Dialog from 'rc-dialog';\r\nimport 'rc-dialog/assets/index.css'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport { log } from '../../utils/log'\r\nimport './index.scss';\r\n\r\nexport interface HorizontalProps {\r\n  sysName?: string,\r\n  queue?: Array<column>,\r\n  title?: Array<string>,\r\n  tip?: string\r\n}\r\n\r\ninterface HorizontalState {\r\n  date: string,\r\n  queue: Array<column>,\r\n  tip: string,\r\n  visiable: boolean,\r\n}\r\n\r\nexport type column = {\r\n  first: string,\r\n  second?: string,\r\n  third?: string,\r\n  fourth?: string,\r\n  fifth?: string | object\r\n}\r\n\r\nexport default class Horizontal extends React.Component < HorizontalProps, HorizontalState > {\r\n\r\n  public timer: NodeJS.Timer | null = null;\r\n  private data: Array<column>;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.timer = null;\r\n    this.state = {\r\n      date: moment().format(\"YYYY[年]MM[月]DD[日] dddd HH : mm\"),\r\n      queue: this.props.queue,\r\n      tip: \"请在等待区等候，听到叫号后前往指定就诊科室\",\r\n      visiable: false,\r\n    };\r\n    this.data = [\r\n      {\r\n        first: \"内分泌科\",\r\n        second: \"301\",\r\n        third: \"杨永信\",\r\n        fourth: \"023喜羊羊\",\r\n        fifth: {\r\n          value: \"024老吴\",\r\n          flag: \"约\"\r\n        },\r\n      },\r\n      {\r\n        first: \"神经科\",\r\n        second: \"302\",\r\n        third: \"杨永信\",\r\n        fourth: \"005灰太狼\",\r\n        fifth: {\r\n          value: \"173老王\",\r\n          flag: \"\"\r\n        },\r\n      },\r\n      {\r\n        first: \"脑残科\",\r\n        second: \"405\",\r\n        third: \"杨永信\",\r\n        fourth: \"005小灰灰\",\r\n        fifth: {\r\n          value: \"173老张\",\r\n          flag: \"约\"\r\n        },\r\n      },\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.trick, 60000);\r\n    log(\"进入横屏\")\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  trick = () => {\r\n    this.setState({\r\n      date: moment().format(\"YYYY[年]MM[月]DD[日] dddd HH : mm\")\r\n    })\r\n  }\r\n\r\n  toggle = (flag: string) => {\r\n    if (_.eq(flag, \"show\")) {\r\n      this.setState({\r\n        visiable: true\r\n      })\r\n    }else {\r\n      this.setState({\r\n        visiable: false\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange = () => {\r\n    const { queue } = this.state;\r\n    const i = Math.round(Math.random() * (this.data.length - 1));\r\n    let key = _.toString(Date.now());\r\n    key = key.substring(key.length - 3)\r\n    queue.shift();\r\n    this.setState({\r\n      queue\r\n    })\r\n    // setTimeout(() => {\r\n      queue.push({\r\n        first: this.data[i].first,\r\n        second: key,\r\n        third: this.data[i].third,\r\n        fourth: this.data[i].fourth,\r\n        fifth: this.data[i].fifth\r\n      });\r\n      this.setState({\r\n        queue\r\n      });\r\n    // }, 800);\r\n  }\r\n\r\n  render() {\r\n    const prefix = \"Horizontal\";\r\n    const { sysName, title } = this.props;\r\n    const { date, queue, tip, visiable } = this.state;\r\n    return (\r\n      <div className={prefix} id={prefix}>\r\n        <img className={`${prefix}-bg`} alt=\"BG\" src={process.env.PUBLIC_URL + '/h5/img/horizontal.jpg'} />\r\n        {/* <QueueAnim delay={300} type=\"left\" className=\"btn-group\"> */}\r\n        <div className=\"btn-group\">\r\n          <button key=\"toggle\" onClick={() => this.toggle(\"show\")}>显示通知</button>\r\n          <button key=\"+1\" onClick={this.onChange}>下一个</button>\r\n        </div>\r\n        {/* </QueueAnim> */}\r\n        {/* <QueueAnim component=\"header\" delay={300} className={`${prefix}-header`}> */}\r\n        <header className={`${prefix}-header`}>\r\n          <span key=\"sysName\">{sysName}</span>\r\n          <span className=\"time\" key=\"time-show\">{ date }</span>\r\n        </header>\r\n        {/* </QueueAnim> */}\r\n        <section className={`${prefix}-middle`}>\r\n          <div className=\"gg-title\">\r\n            {\r\n              !_.isEmpty(title) && \r\n              title.map((item, index) => {\r\n                return (\r\n                  <div className=\"td\" key={`table-title-${index}`}>\r\n                    <span>{ item }</span>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n          {/* <QueueAnim\r\n            delay={600}\r\n            type={[\"bottom\", \"bottom\"]}\r\n            className=\"gg-content\"\r\n          > */}\r\n          <div className=\"gg-content\">\r\n            {\r\n              !_.isEmpty(queue) && \r\n              queue.map((row, index) => {\r\n                if (index % 2 === 0) {\r\n                  return (\r\n                    <div className=\"gg-row even\" key={`patient-${index}`}>\r\n                      {\r\n                        _.keys(row).map((item, cindex) => {\r\n                          if (typeof row[item] === \"object\") {\r\n                            return (\r\n                              <div className=\"has-flag\" key={cindex}>\r\n                                <span>{ row[item].value }</span>\r\n                                <div className=\"flag\">{row[item].flag}</div>\r\n                              </div>\r\n                            );\r\n                          }\r\n                          return (\r\n                            <div className=\"no-flag\" key={cindex}>{row[item]}</div>\r\n                          );\r\n                        })\r\n                      }\r\n                    </div>\r\n                  )\r\n                }else {\r\n                  return (\r\n                    <div className=\"gg-row odd\" key={`patient-${index}`}>\r\n                      {\r\n                        _.keys(row).map((item, cindex) => {\r\n                          if (typeof row[item] === \"object\") {\r\n                            return (\r\n                              <div className=\"has-flag\" key={cindex}>\r\n                                <span>{ row[item].value }</span>\r\n                                <div className=\"flag\">{row[item].flag}</div>\r\n                              </div>\r\n                            );\r\n                          }\r\n                          return (\r\n                            <div className=\"no-flag\" key={cindex}>{row[item]}</div>\r\n                          );\r\n                        })\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n            </div>\r\n          {/* </QueueAnim> */}\r\n        </section>\r\n        {/* <QueueAnim delay={1300} type=\"top\" component=\"footer\" className={`${prefix}-footer`}> */}\r\n        <footer className={`${prefix}-footer`}>\r\n          <span key=\"tip\">{ tip }</span>\r\n        </footer>\r\n        {/* </QueueAnim> */}\r\n        <Dialog \r\n          visible={visiable}\r\n          wrapClassName=\"gg-modal\"\r\n          animation=\"zoom\"\r\n          maskAnimation=\"fade\"\r\n          closable={false}\r\n          // getContainer={() => document.getElementById(`${prefix}`)}\r\n          closeIcon={<span></span>}\r\n          onClose={e => this.toggle(\"close\")}\r\n        >\r\n          呵呵呵\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst GMarquee = props => {\r\n  return (\r\n    // eslint-disable-next-line\r\n    <marquee className=\"g-marquee\" direction=\"left\">\r\n      { props.children }\r\n    </marquee>\r\n  )\r\n}\r\n\r\nexport default GMarquee;","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport type Name = {\r\n  /** 样式名 */\r\n  className?: string,\r\n  /** 名字 */\r\n  value: string,\r\n  /** Id */\r\n  id?: string\r\n}\r\n\r\nconst Name: React.FC<Name> = (props: Name) => {\r\n\r\n  const classString = classNames(\"gg-name\", props.className);\r\n  const rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\r\n  const isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\r\n\r\n  function handleName(value: string): any {\r\n    let len = value.length;\r\n    if (isTwoCNChar(value)) {\r\n      return <span>{value.split('').join(\" \")}</span>;\r\n    }else if (len > 3) {\r\n      return (\r\n        <span className=\"overSizeName\">{value}</span>\r\n      )\r\n    }\r\n    return <span>{value}</span>;\r\n  }\r\n\r\n  return (\r\n    <div className={classString}>\r\n      {\r\n        props.id && <span key={props.id}>{ props.id } </span>\r\n      }\r\n      {\r\n        props.value &&\r\n        // <span key={props.value} dangerouslySetInnerHTML={{__html: handleName(props.value)}} />\r\n        handleName(props.value)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Name","import React from 'react';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport GMarquee from '../marquee';\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport './index.scss';\r\nimport Name from '../Name';\r\nimport _ from 'lodash'\r\nimport { log } from '../../utils/log'\r\n\r\nexport interface VerticalProps {\r\n  sysName: string,\r\n  department: string,\r\n  queue: Array<Array<string>>,\r\n  officeId: string,\r\n  docInfo: docInfo,\r\n  type: \"horizontal\" | \"vertical\"\r\n}\r\n\r\nexport type docInfo = {\r\n  avatar?: string,\r\n  name: string,\r\n  duty: string\r\n}\r\n\r\nexport interface VerticalState {\r\n  queue: Array<Array<string>>,\r\n  date: string,\r\n  counter: number,\r\n  docInfo: docInfo,\r\n  department: string,\r\n  officeId: string,\r\n}\r\n\r\nexport default class Vertical extends React.Component<VerticalProps, VerticalState> {\r\n\r\n  public timer: NodeJS.Timer | null = null;\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.timer = null\r\n    this.state = {\r\n      queue: this.props.queue,\r\n      date: moment().format(\"YYYY[年]MM[月]DD[日] dddd HH : mm\"),\r\n      counter: 0,\r\n      docInfo: this.props.docInfo,\r\n      department: this.props.department,\r\n      officeId: this.props.officeId\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.trick, 60000);\r\n    console.log(window)\r\n    // alert(\"进入竖屏\")\r\n    log(\"进入竖屏\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    };\r\n    // alert(\"竖屏卸载\")\r\n  }\r\n\r\n  trick = () => {\r\n    this.setState({\r\n      date: moment().format(\"YYYY[年]MM[月]DD[日] dddd HH : mm\")\r\n    })\r\n  }\r\n  \r\n  testQueue(flag: string): void {\r\n    let result = [...this.state.queue];\r\n    if (_.eq(flag, \"add\")) {\r\n      result.push([\"00\" + this.state.counter, \"测试\" + this.state.counter])\r\n      this.setState(prev => ({\r\n        queue: result,\r\n        counter: prev.counter + 1\r\n      }))\r\n    }else if (_.eq(flag, \"delete\")) {\r\n      result = result.slice(1)\r\n      this.setState({\r\n        queue: result\r\n      })\r\n    }else if (_.eq(flag, \"changeDoc\")) {\r\n      this.setState({\r\n        docInfo: {\r\n          avatar: \"doc1.png\",\r\n          name: \"灰太狼\",\r\n          duty: \"主刀医师\"\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const prefix = \"Vertical\"\r\n    const { sysName, department, officeId } = this.props;\r\n    const { queue, docInfo } = this.state\r\n    const waitingQueue = _.isEmpty(queue.slice(1)) ? [] : queue.slice(1);\r\n    const currentUser = _.isEmpty(queue.slice(0).shift()) ? [] : queue.slice(0).shift();\r\n    return (\r\n      <div className={prefix}>\r\n        <img className={`${prefix}-bg`} alt=\"BG\" src={process.env.PUBLIC_URL + '/h5/img/vertical.jpg'} />\r\n        {/* <QueueAnim component=\"header\" className={`${prefix}-header`}> */}\r\n        <header className={`${prefix}-header`}>\r\n          <span key=\"sysName\">{sysName}</span>\r\n        </header>\r\n        {/* </QueueAnim> */}\r\n        <section className={`${prefix}-middle-part`}>\r\n          {/* <QueueAnim \r\n            component=\"span\"\r\n            className=\"department-name\"\r\n            delay={300}\r\n            animConfig={{ opacity: [1, 0], translateY: [0, -20] }}\r\n          > */}\r\n          <div className=\"department-name\">\r\n            <span key=\"department\">{department}</span>\r\n          </div>\r\n          {/* </QueueAnim> */}\r\n          <GMarquee>\r\n            {\r\n              !_.isEmpty(currentUser) ?\r\n              `请${currentUser![0]}号${currentUser![1]}到诊室${officeId}就诊` :\r\n              `暂无待诊用户`\r\n            }\r\n          </GMarquee>\r\n          <div className=\"main-content\">\r\n            <div className=\"left-part\">\r\n              {/* <QueueAnim animConfig={{opacity: [1, 0]}} key=\"doc-img\" className=\"doc-img\"> */}\r\n              <div className=\"doc-img\">\r\n                <img key=\"doc-img\" alt=\"doc-img\" src={process.env.PUBLIC_URL + `/h5/img/${docInfo.avatar}`} />\r\n              </div>\r\n              {/* </QueueAnim> */}\r\n              <div className=\"doc-info\">\r\n                {/* <QueueAnim delay={400} className=\"item\"> */}\r\n                <div className=\"item\">\r\n                  <div className=\"label\">医生</div>\r\n                  <div key=\"docInfo.name\" className=\"content\">{docInfo.name}</div>\r\n                </div>\r\n                {/* </QueueAnim> */}\r\n                {/* <QueueAnim delay={600} className=\"item\"> */}\r\n                <div className=\"item\">\r\n                  <div className=\"label\">职称</div>\r\n                  <div key=\"docInfo.duty\" className=\"content\">{docInfo.duty}</div>\r\n                </div>\r\n                {/* </QueueAnim> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"right-part\">\r\n              <div className=\"current\">\r\n                <div className=\"label\">\r\n                  <span>请就诊</span>\r\n                </div>\r\n                {\r\n                  !_.isEmpty(currentUser) ? \r\n                  // <QueueAnim animConfig={{ opacity: [1, 0], translateY: [0, 20] }} className=\"content\">\r\n                  <div className=\"content\">\r\n                    <span key={\"current-num\"}>{ currentUser![0] }</span>\r\n                    <Name key=\"current-user\" value={currentUser![1]} />\r\n                  </div>\r\n                  // </QueueAnim>\r\n                  : \r\n                  <div className=\"content\"></div>\r\n                }\r\n              </div>\r\n              <div className=\"waiting\">\r\n                <div className=\"label\">\r\n                  <span>请等待</span>\r\n                </div>\r\n                {/* <QueueAnim animConfig={{ opacity: [1, 0], translateY: [0, 20] }} className=\"content\"> */}\r\n                <div className=\"content\">\r\n                  {\r\n                    !_.isEmpty(waitingQueue) && waitingQueue.map((item: Array<string>, index: number) => {\r\n                      return <Name key={index} value={item[1]} id={item[0]} />\r\n                    })\r\n                  }\r\n                </div>\r\n                {/* </QueueAnim> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className={`${prefix}-middle-bottom-part`}>\r\n          {/* 测试按钮 */}\r\n          {/* <button onClick={this.testQueue.bind(this, \"add\")}>队列+1</button>\r\n          <button onClick={this.testQueue.bind(this, \"delete\")}>队列-1</button>\r\n          <button onClick={this.testQueue.bind(this, \"changeDoc\")}>替换医生</button> */}\r\n          {/* 测试按钮 end */}\r\n        </section>\r\n        {/* <QueueAnim\r\n          className={`${prefix}-bottom-part`}\r\n          component=\"footer\"\r\n          delay={1000}\r\n          animConfig={{ opacity: [1, 0], translateY: [0, 20] }}\r\n        > */}\r\n        <footer className={`${prefix}-bottom-part`}>\r\n          <span key=\"time-set\" className=\"time\">\r\n            { this.state.date }\r\n          </span>\r\n        </footer>\r\n        {/* </QueueAnim> */}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useEffect } from 'react';\nimport Horizontal from '../components/Horizontal/index';\nimport Vertical from '../components/Vertical/index';\nimport Dialog from 'rc-dialog';\nimport 'rc-dialog/assets/index.css'\nimport './App.scss';\nimport _ from 'lodash'\nimport { log } from '../utils/log'\n\nexport interface AppProps {\n  config: any,\n}\n\nconst App: React.FC<AppProps> = props => {\n  const { config } = props;\n  const components = {\n    Horizontal: Horizontal,\n    Vertical: Vertical\n  };\n\n  useEffect(() => {\n    // alert(\"进入App，选择分辨率对应的组件\")\n    log(\"进入App，选择分辨率对应的组件\")\n  })\n\n  const Component = _.eq(config.type, \"vertical\") ? components.Vertical : components.Horizontal;\n\n  return (\n    <Component { ...config } />\n    // <h1>App</h1>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.TS = {};\nwindow.ggie = {};\nwindow.ggie.webLog = params => {\n  // console.log(params)\n}\nwindow.TS.init = (config: any): void => {\n  let rootNode: HTMLElement = document.getElementById(\"root\");\n  if (config.type === \"horizontal\") {\n    rootNode.style.width = \"1920px\";\n    rootNode.style.height = \"1080px\";\n  }\n  // alert(\"进入入口文件，传值入App\")\n  ReactDOM.render(<App config={config} />, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}